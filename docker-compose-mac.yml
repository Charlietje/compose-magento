version: '3'

services:
  redis:
    image: redis:alpine
    environment:
      - DOMAIN_NAME=redis.${BASEHOST:-magento.docker}

  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-toor}
      - DOMAIN_NAME=mysql.${BASEHOST:-magento.docker}
    command: --innodb-doublewrite=0

  mailcatcher:
    image: mailhog/mailhog
    environment:
      - VIRTUAL_HOST=mailcatcher.${BASEHOST:-magento.docker}
    networks:
      - default
      - proxy_proxy

  application:
    image: dockerwest/php-magento${MAGENTOVERSION}:${PHPVERSION:-7.0}
    environment:
      - C_UID=${C_UID:-1000}
      - C_GID=${G_UID:-1000}
      - DEVELOPMENT=${DEVELOPMENT:-1}
    volumes:
      - ${APPLICATION:-../magento}:/phpapp:cached
      - generated:/phpapp/generated
      - var:/phpapp/var
      - vendor:/phpapp/vendor
      - pub-static:/phpapp/pub/static

  nginx:
    image: dockerwest/nginx-magento${MAGENTOVERSION}:${NGINXVERSION:-stable}
    environment:
      - VIRTUAL_HOST=${BASEHOST:-magento.docker},${EXTRAHOSTS}
    volumes:
      - ${APPLICATION:-../magento}:/phpapp:cached
      - generated:/phpapp/generated
      - var:/phpapp/var
      - vendor:/phpapp/vendor
      - pub-static:/phpapp/pub/static
    networks:
      - default
      - proxy_proxy

  elastic:
    image: blacktop/elasticsearch:5
    environment:
      - DOMAIN_NAME=elastic.${BASEHOST:-magento.docker}

  elastic-hq:
    image: elastichq/elasticsearch-hq
    environment:
      - VIRTUAL_HOST=hq.${BASEHOST:-magento.docker}
    networks:
      - default
      - proxy_proxy

  permissions-helper:
    image: docker
    command: "sh -c \"while true; do docker exec ${COMPOSE_PROJECT_NAME}_application_1 chown -R www-data: /phpapp/generated /phpapp/var /phpapp/vendor /phpapp/pub/static; sleep 10; done\""
    environment:
      DOCKER_HOST: unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  generated:
  var:
  vendor:
  pub-static:

networks:
  proxy_proxy:
    external: true

